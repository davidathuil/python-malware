def encrypt_message_cesar(message, key):
    encrypted_message = ""
    for char in message:
        if char.isalpha():
            shift = key % 26
            if char.islower():
                encrypted_message += chr((ord(char) + shift - ord('a')) % 26 + ord('a'))
            else:
                encrypted_message += chr((ord(char) + shift - ord('A')) % 26 + ord('A'))
        else:
            encrypted_message += char
    return encrypted_message

def crypt_file(path, key):
    try:
        with open(path, 'r') as file:
            plaintext = file.read()
            encrypted_text=encrypt_message_cesar(plaintext, key)
        with open(path + "_encrypted", 'w') as encrypted_file:
            encrypted_file.write(encrypted_text)

        print("Encryption successful.")
    except Exception as e:
        print(f"Error: {e}")

def decrypt_file(path, key):
    try:
        with open(path, 'r') as file:
            encrypted_text = file.read()

        decrypted_text = ""
        for char in encrypted_text:
            if char.isalpha():
                shift = ord(char) - key
                if char.isupper():
                    if shift < ord('A'):
                        shift += 26
                elif char.islower():
                    if shift < ord('a'):
                        shift += 26
                decrypted_text += chr(shift)
            else:
                decrypted_text += char

        with open(path + "_decrypted", 'w') as decrypted_file:
            decrypted_file.write(decrypted_text)

        print("Decryption successful.")
    except Exception as e:
        print(f"Error: {e}")

# Exemple d'utilisation
path = "chemin\versle\fichier.txt"
key = 3
crypt_file(path, key)
decrypt_file(path + "_encrypted", key)
